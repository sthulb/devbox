Resources:
  DevBoxDoc:
    Type: AWS::SSM::Document
    Properties:
      DocumentType: Command
      Tags:
        - Key: Kind
          Value: devbox
      TargetType: /AWS::EC2::Instance
      Content:
        schemaVersion: "2.2"
        description: Install packages on Ubuntu
        parameters:
          release:
            type: String
            default: jammy
            allowedValues:
              - focal
              - bionic
              - jammy
          nodeVersion:
            type: String
            default: node_20.x
        mainSteps:
          - action: aws:runShellScript
            name: InstallBasePackages
            inputs:
              runCommand:
                - apt update
                - DEBIAN_FRONTEND=noninteractive apt install -y software-properties-common build-essential curl unzip
          - action: aws:runShellScript
            name: Install1PW
            inputs:
              runCommand:

                - apt update
                - DEBIAN_FRONTEND=noninteractive apt install -y apt-transport-https ca-certificates curl gnupg lsb-release
                - curl -fsSL https://downloads.1password.com/linux/keys/1password.asc | gpg --dearmor -o /usr/share/keyrings/1password-archive-keyring.gpg
                - echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/1password-archive-keyring.gpg] https://downloads.1password.com/linux/debian/$(dpkg --print-architecture) stable main" >> /etc/apt/sources.list.d/1password.list
                - mkdir -p /etc/debsig/policies/AC2D62742012EA22/
                - curl -sS https://downloads.1password.com/linux/debian/debsig/1password.pol -o /etc/debsig/policies/AC2D62742012EA22/1password.pol
                - mkdir -p /usr/share/debsig/keyrings/AC2D62742012EA22
                - curl -sS https://downloads.1password.com/linux/keys/1password.asc | gpg --dearmor --output /usr/share/debsig/keyrings/AC2D62742012EA22/debsig.gpg
                - apt update
                - DEBIAN_FRONTEND=noninteractive apt install -y 1password-cli

          - action: aws:runShellScript
            name: InstallAWSCLI
            inputs:
              runCommand:
                - curl -L -o /tmp/aws-cli.zip https://awscli.amazonaws.com/awscli-exe-linux-$(uname -m).zip
                - unzip -d /tmp /tmp/aws-cli.zip 
                - /tmp/aws/install
                - rm -rf /tmp/aws

          - action: aws:runShellScript
            name: DevBoxInstallDocker
            inputs:
              runCommand:
                - apt update
                - DEBIAN_FRONTEND=noninteractive apt install -y apt-transport-https ca-certificates curl gnupg lsb-release
                - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
                - echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu  {{ release }} stable" >> /etc/apt/sources.list.d/docker.list
                - apt update
                - DEBIAN_FRONTEND=noninteractive apt install -y docker-ce docker-ce-cli containerd.io
                - usermod -aG docker ubuntu

          - action: aws:runShellScript
            name: InstallGit
            inputs:
              runCommand:
                - add-apt-repository ppa:git-core/ppa
                - apt update
                - DEBIAN_FRONTEND=noninteractive apt install -y git

          - action: aws:runShellScript
            name: InstallGo
            inputs:
              runCommand:
                - add-apt-repository ppa:longsleep/golang-backports
                - apt update
                - DEBIAN_FRONTEND=noninteractive apt install -y golang-go

          - action: aws:runShellScript
            name: InstallRust
            inputs:
              runCommand:
                - add-apt-repository ppa:ubuntu-mozilla-security/rust-next
                - apt update
                - DEBIAN_FRONTEND=noninteractive apt install -y rustc cargo

          - action: aws:runShellScript
            name: InstallNode
            inputs:
              runCommand:
                - curl -fsSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | gpg --dearmor -o /usr/share/keyrings/nodesource-keyring.gpg
                - echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/nodesource-keyring.gpg] https://deb.nodesource.com/{{ nodeVersion }}  {{ release }} main" >> /etc/apt/sources.list.d/nodesource.list
                - apt update
                - DEBIAN_FRONTEND=noninteractive apt install -y nodejs
                
          - action: aws:runShellScript
            name: BuildPython
            inputs: 
              runCommand:
                - apt update
                - DEBIAN_FRONTEND=noninteractive apt install -y build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev curl llvm libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev
                - git clone https://github.com/pyenv/pyenv.git /home/ubuntu/.pyenv
                - chown ubuntu:ubuntu /home/ubuntu/.pyenv
                - echo "export PYENV_ROOT=\"\$HOME/.pyenv\"" >> /home/ubuntu/.profile
                - echo "command -v pyenv >/dev/null || export PATH=\"\$PYENV_ROOT/bin:$PATH\"" >> /home/ubuntu/.profile
                - echo "eval \"\$(pyenv init -)\"" >> /home/ubuntu/.profile
                - sudo -u ubuntu /home/ubuntu/.pyenv/bin/pyenv install 3.11
                - echo "3.11" > /home/ubuntu/.pyenv/version
                - chown ubuntu:ubuntu /home/ubuntu/.pyenv

  DevBoxAssoc:
    Type: AWS::SSM::Association
    Properties:
      Name: !Ref DevBoxDoc
      DocumentVersion: $LATEST
      MaxConcurrency: 100
      MaxErrors: 100
      Targets:
        - Key: tag:Name
          Values:
            - devbox
