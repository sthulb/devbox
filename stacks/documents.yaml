Resources:
  DevBoxDoc:
    Type: AWS::SSM::Document
    Properties:
      DocumentType: Command
      Tags:
        - Key: Kind
          Value: devbox
      TargetType: /AWS::EC2::Instance
      Content:
        schemaVersion: "2.2"
        description: Install packages on Ubuntu
        parameters:
          arch:
            type: String
            default: arm64
            description: Instance architecture type
            allowedValues:
              - arm64
              - amd64
          release:
            type: String
            default: focal
            allowedValues:
              - focal
              - bionic
        mainSteps:
          - action: aws:runShellScript
            name: InstallBasePackages
            inputs:
              runCommand:
                - apt update
                - DEBIAN_FRONTEND=noninteractive apt install -y software-properties-common build-essential curl unzip
          - action: aws:runShellScript
            name: Install1PW
            inputs:
              runCommand:
                - curl -L -o /tmp/1password-cli.zip https://cache.agilebits.com/dist/1P/op/pkg/v1.12.2/op_linux_arm64_v1.12.2.zip
                - unzip -d /usr/local/bin /tmp/1password-cli.zip 
                - rm -rf /usr/local/bin/op.sig
          - action: aws:runShellScript
            name: InstallAWSCLIArm
            precondition:
              StringEquals:
              - "{{ arch }}"
              - arm64
            inputs:
              runCommand:
                - curl -L -o /tmp/aws-cli.zip https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip
                - unzip -d /tmp /tmp/aws-cli.zip 
                - /tmp/aws/install
                - rm -rf /tmp/aws
          - action: aws:runShellScript
            name: InstallAWSCLIIntel
            precondition:
              StringEquals:
              - "{{ arch }}"
              - amd64
            inputs:
              runCommand:
                - curl -L -o /tmp/aws-cli.zip https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
                - unzip -d /tmp /tmp/aws-cli.zip 
                - /tmp/aws/install
                - rm -rf /tmp/aws
          - action: aws:runShellScript
            name: DevBoxInstallDocker
            inputs:
              runCommand:
                - apt update
                - DEBIAN_FRONTEND=noninteractive apt install -y apt-transport-https ca-certificates curl gnupg lsb-release
                - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
                - echo "deb [arch={{ arch }} signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu  {{ release }} stable" >> /etc/apt/sources.list.d/docker.list
                - apt update
                - DEBIAN_FRONTEND=noninteractive apt install -y docker-ce docker-ce-cli containerd.io
                - usermod -aG docker ubuntu
          - action: aws:runShellScript
            name: InstallGit
            inputs:
              runCommand:
                - add-apt-repository ppa:git-core/ppa
                - apt update
                - DEBIAN_FRONTEND=noninteractive apt install -y git
          - action: aws:runShellScript
            name: InstallGo
            inputs:
              runCommand:
                - add-apt-repository ppa:longsleep/golang-backports
                - apt update
                - DEBIAN_FRONTEND=noninteractive apt install -y golang-go
          - action: aws:runShellScript
            name: InstallRust
            inputs:
              runCommand:
                - add-apt-repository ppa:ubuntu-mozilla-security/rust-next
                - apt update
                - DEBIAN_FRONTEND=noninteractive apt install -y rustc cargo

  DevBoxAssoc:
    Type: AWS::SSM::Association
    Properties:
      Name: !Ref DevBoxDoc
      DocumentVersion: $LATEST
      MaxConcurrency: 100
      MaxErrors: 100
      Targets:
        - Key: tag:Name
          Values:
            - devbox
